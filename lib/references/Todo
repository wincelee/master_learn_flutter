Create Login Two


import 'dart:async';

import 'package:classifieds_flutter/classes/config.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/material.dart';
import 'package:flutter/services.dart';
import 'package:logger/logger.dart';

class Login extends StatefulWidget {
  const Login({Key? key}) : super(key: key);

  @override
  _LoginState createState() => _LoginState();
}

class _LoginState extends State<Login> {
  final loginFormKey = GlobalKey<FormState>();

  TextEditingController phoneNoController = TextEditingController();
  TextEditingController idNoController = TextEditingController();

  FocusNode phoneNoFocusNode = FocusNode();
  FocusNode idNoFocusNode = FocusNode();

  int maxInputLength = 13;

  bool phoneNoHasFocus = false;
  bool showIdNoErrorSuffixIcon = false;
  bool showPhoneNoErrorSuffixIcon = false;

  @override
  void initState() {
    super.initState();
  }

  @override
  void dispose() {
    super.dispose();
    phoneNoController.dispose();
    phoneNoFocusNode.dispose();
    idNoController.dispose();
    idNoFocusNode.dispose();
  }

  void login(String phoneNo) {
    Logger().i("Phone Number: $phoneNo");

    Config.loaderDialog(context);

    Timer(Duration(seconds: 3), () {
      Navigator.pop(context);
    });
  }

  @override
  Widget build(BuildContext context) {
    if ((defaultTargetPlatform == TargetPlatform.iOS) ||
        (defaultTargetPlatform == TargetPlatform.android)) {
      Config.setFullScreen();
    }

    return Scaffold(
      backgroundColor: Colors.white,
      body: SingleChildScrollView(
          child: Center(
              child: Form(
                  autovalidateMode: AutovalidateMode.onUserInteraction,
                  key: loginFormKey,
                  child: Column(
                    mainAxisAlignment: MainAxisAlignment.center,
                    crossAxisAlignment: CrossAxisAlignment.center,
                    children: [
                      Container(
                        padding: const EdgeInsets.only(top: 50),
                        margin: const EdgeInsets.only(top: 1, bottom: 50),
                        width: 400,
                        height: 200,
                        child: Image.asset('images/text_logo.png'),
                      ),
                      Container(
                          padding: const EdgeInsets.all(1),
                          margin: const EdgeInsets.only(top: 5, bottom: 5),
                          child: const Text(
                            "Log in | Register",
                            textAlign: TextAlign.center,
                            style: TextStyle(
                              color: Colors.black,
                              fontWeight: FontWeight.bold,
                              fontSize: 25,
                            ),
                          )),
                      Container(
                          padding: const EdgeInsets.only(top: 10, bottom: 10),
                          margin: const EdgeInsets.only(top: 5, bottom: 5),
                          child: const Text(
                            "Phone Number",
                            textAlign: TextAlign.center,
                            style: TextStyle(
                                color: Colors.black54,
                                fontFamily: "roboto_regular"),
                          )),
                      Container(
                          padding: const EdgeInsets.only(
                              top: 10, bottom: 10, left: 5, right: 5),
                          margin: const EdgeInsets.only(
                              top: 15, bottom: 15, right: 10, left: 10),
                          child: TextFormField(
                            // Limit Input Length
                            // import 'package:flutter/services.dart';
                            // inputFormatters: [LengthLimitingTextInputFormatter(13)],
                            // or limit length by maxLength
                            // Limiting by maxLength will show char counter at the bottom
                            maxLength: maxInputLength,
                            focusNode: phoneNoFocusNode,
                            controller: phoneNoController,
                            cursorHeight: 20,
                            // You cant have an initial value and a controller at the same time
                            // there can only be one
                            // initialValue: "+254",
                            decoration: InputDecoration(
                                labelText: "Please Enter Phone Number",
                                border: OutlineInputBorder(),
                                suffixIcon: showPhoneNoErrorSuffixIcon
                                    ? Icon(Icons.error_outline_rounded,
                                        color: Colors.red)
                                    : null),
                            keyboardType: TextInputType.number,
                            inputFormatters: <TextInputFormatter>[
                              FilteringTextInputFormatter.digitsOnly
                            ],
                            validator: (phoneNo) {

                              if (phoneNo!.isEmpty) {
                                phoneNoFocusNode.requestFocus();
                                phoneNoHasFocus = true;

                                WidgetsBinding.instance
                                    .addPostFrameCallback((_) {
                                  setState(() {
                                    showPhoneNoErrorSuffixIcon = true;
                                  });
                                });

                                return "Please Enter Phone Number";
                              } else {
                                phoneNoHasFocus = false;

                                WidgetsBinding.instance!
                                    .addPostFrameCallback((_) {
                                  setState(() {
                                    showPhoneNoErrorSuffixIcon = false;
                                  });
                                });

                                return null;
                              }
                            },
                          )),
                      Container(
                          padding: const EdgeInsets.only(
                              top: 10, bottom: 10, left: 5, right: 5),
                          margin: const EdgeInsets.only(
                              top: 15, bottom: 15, right: 10, left: 10),
                          child: TextFormField(
                              // Limit Input Length
                              // import 'package:flutter/services.dart';
                              // inputFormatters: [LengthLimitingTextInputFormatter(13)],
                              // or limit length by maxLength
                              // Limiting by maxLength will show char counter at the bottom
                              maxLength: maxInputLength,
                              focusNode: idNoFocusNode,
                              controller: idNoController,
                              cursorHeight: 20,
                              // You cant have an initial value and a controller at the same time
                              // there can only be one
                              // initialValue: "+254",
                              decoration: InputDecoration(
                                labelText: "Enter IdNumber",
                                /* errorText: filledPhoneNo
                        ? "Id Number Has Not been entered"
                        : null,*/
                                border: OutlineInputBorder(),
                                suffixIcon: showIdNoErrorSuffixIcon
                        ? Icon(Icons.error_outline_rounded, color: Colors.red)
                        : null
                              ),
                              keyboardType: TextInputType.number,
                              inputFormatters: <TextInputFormatter>[
                                FilteringTextInputFormatter.digitsOnly
                              ],
                              validator: (idNo) {
                                if (idNo!.isEmpty) {

                                  WidgetsBinding.instance
                                      .addPostFrameCallback((_) {
                                    setState(() {
                                      showIdNoErrorSuffixIcon = true;
                                    });
                                  });

                                  return "Please Enter Id Number";
                                } else {

                                  WidgetsBinding.instance!
                                      .addPostFrameCallback((_) {
                                    setState(() {
                                      showIdNoErrorSuffixIcon = false;
                                    });
                                  });

                                  return null;
                                }
                              })),
                      Container(
                          width: double.infinity,
                          padding: const EdgeInsets.only(
                              top: 10, bottom: 10, left: 5, right: 5),
                          margin: const EdgeInsets.only(
                              top: 15, bottom: 15, right: 10, left: 10),
                          child: ElevatedButton(
                              onPressed: () {
                                /*if (phoneNoController.text.isEmpty) {
                      setState(() {
                        filledPhoneNo = false;
                      });
                    } else {
                      setState(() {
                        filledPhoneNo = true;
                      });

                      login(phoneNoController.text.toString());
                    }*/

                                /*setState(() {
                      phoneNoController.text.isEmpty
                          ? filledPhoneNo = true
                          : filledPhoneNo = false;
                    });*/

                                /*if (isPhoneNumberEmpty()) {
                      Logger().i("isPhoneNumberEmpty = True");
                    } else if (!isPhoneNumberEmpty()) {
                      Logger().i("isPhoneNumberEmpty = False");
                    }*/

                                if (loginFormKey.currentState!.validate()) {
                                  login(phoneNoController.text.toString());
                                } else {
                                  if (!phoneNoHasFocus) {
                                    idNoFocusNode.requestFocus();
                                  }
                                }
                              },
                              child: Text("Next".toUpperCase()),
                              style: ElevatedButton.styleFrom(
                                shape: StadiumBorder(),
                              )))
                    ],
                  )))),
    );
  }
}
